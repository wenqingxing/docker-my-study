
Dockerfile定义卷
jekyll：
VOLUME [ "/data", "/var/www/html" ]
apache：
VOLUME [ "/var/www/html" ]

docker run -v $PWD:/data/ --name james_blog jamtur01/jekyll
没有-d，表示没有在后台运行
docker run -d -P --volumes-from james_blog jamtur01/apache

从定义卷的容器中共享卷
docker run -d -P --volumes-from james_blog jamtur01/apache
--volumes-from：把指定容器里的所有卷都加入新创建的容器里
前提是容器必须存在
**即使删除了使用卷的最后一个容器，卷中的数据也会持久保存。

更新代码后，需要重启容器。
docker  restart james_blog

***apache容器是不需要更新的
============================================================================
jekyll Dockerfile

FROM ubuntu:16.04
MAINTAINER James Turnbull <james@example.com>
ENV REFRESHED_AT 2016-06-01

RUN apt-get -qq update
RUN apt-get -qq install ruby ruby-dev build-essential nodejs
RUN gem install --no-rdoc --no-ri jekyll -v 2.5.3

VOLUME [ "/data", "/var/www/html" ]
WORKDIR /data

ENTRYPOINT [ "jekyll", "build", "--destination=/var/www/html", "--watch" ]

运行容器
docker run -v $PWD:/data/ --name james_blog jamtur01/jekyll
============================================================================
 
apache Dockerfile

FROM ubuntu:16.04
MAINTAINER James Turnbull <james@example.com>

RUN apt-get -qq update
RUN apt-get -qq install apache2

VOLUME [ "/var/www/html" ]
WORKDIR /var/www/html

ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_PID_FILE /var/run/apache2.pid
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2

RUN mkdir -p $APACHE_LOG_DIR $APACHE_RUN_DIR $APACHE_LOCK_DIR

EXPOSE 80

ENTRYPOINT [ "/usr/sbin/apache2" ]

运行容器
docker run -d -P --volumes-from james_blog jamtur01/apache
============================================================================




